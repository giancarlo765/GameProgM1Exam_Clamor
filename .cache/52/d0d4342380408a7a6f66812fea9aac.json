{"id":"index.html","dependencies":[{"name":"./Exam\\scripts\\phaser.min.js","dynamic":true,"resolved":"C:\\Users\\My Pc\\Desktop\\Module 1\\Exam\\scripts\\phaser.min.js","parent":"C:\\Users\\My Pc\\Desktop\\Module 1\\index.html"}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>My Game</title>\r\n    <script src=\"/12f0be14ca1df331ead750e65d4491de.js\"></script>\r\n</head>\r\n<body>\r\n    <script>var config = {\n  type: Phaser.AUTO,\n  width: 800,\n  height: 600,\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: {\n        y: 300\n      },\n      debug: false\n    }\n  },\n  scene: {\n    preload: preload,\n    create: create,\n    update: update\n  }\n};\nvar player;\nvar stars;\nvar bombs;\nvar platforms;\nvar cursors;\nvar score = 0;\nvar gameOver = false;\nvar scoreText;\nvar color = 0;\nvar body = 1;\nvar game = new Phaser.Game(config);\n\nfunction preload() {\n  this.load.image('sky', 'Exam/assets/sky.png');\n  this.load.image('ground', 'Exam/assets/platform.png');\n  this.load.image('star', 'Exam/assets/star.png');\n  this.load.image('bomb', 'Exam/assets/bomb.png');\n  this.load.spritesheet('dude', 'Exam/assets/dude.png', {\n    frameWidth: 32,\n    frameHeight: 48\n  });\n}\n\nfunction create() {\n  this.add.image(400, 300, 'sky');\n  platforms = this.physics.add.staticGroup();\n  platforms.create(400, 568, 'ground').setScale(2).refreshBody();\n  platforms.create(600, 400, 'ground');\n  platforms.create(50, 250, 'ground');\n  platforms.create(750, 220, 'ground');\n  player = this.physics.add.sprite(100, 450, 'dude');\n  player.setBounce(0.2);\n  player.setCollideWorldBounds(true);\n  this.anims.create({\n    key: 'left',\n    frames: this.anims.generateFrameNumbers('dude', {\n      start: 0,\n      end: 3\n    }),\n    frameRate: 10,\n    repeat: -1\n  });\n  this.anims.create({\n    key: 'turn',\n    frames: [{\n      key: 'dude',\n      frame: 4\n    }],\n    frameRate: 20\n  });\n  this.anims.create({\n    key: 'right',\n    frames: this.anims.generateFrameNumbers('dude', {\n      start: 5,\n      end: 8\n    }),\n    frameRate: 10,\n    repeat: -1\n  });\n  cursors = this.input.keyboard.createCursorKeys();\n  stars = this.physics.add.group({\n    key: 'star',\n    repeat: 11,\n    setXY: {\n      x: 12,\n      y: 0,\n      stepX: 70\n    }\n  });\n  stars.children.iterate(function (child) {\n    child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n  });\n  bombs = this.physics.add.group();\n  scoreText = this.add.text(16, 16, 'score: 0', {\n    fontSize: '32px',\n    fill: '#000'\n  });\n  this.physics.add.collider(player, platforms);\n  this.physics.add.collider(stars, platforms);\n  this.physics.add.collider(bombs, platforms);\n  this.physics.add.overlap(player, stars, collectStar, null, this);\n  this.physics.add.collider(player, bombs, hitBomb, null, this);\n}\n\nfunction update() {\n  if (gameOver) {\n    return;\n  }\n\n  if (cursors.left.isDown) {\n    player.setVelocityX(-160);\n    player.anims.play('left', true);\n  } else if (cursors.right.isDown) {\n    player.setVelocityX(160);\n    player.anims.play('right', true);\n  } else {\n    player.setVelocityX(0);\n    player.anims.play('turn');\n  }\n\n  if (cursors.up.isDown && player.body.touching.down) {\n    player.setVelocityY(-330);\n  }\n}\n\nfunction collectStar(player, star) {\n  var color = [0xff0000, 0xffa500, 0xffff00, 0x08000, 0x00ffff, 0x0000ff, 0x9900ff];\n  star.disableBody(true, true);\n  score += 10;\n  scoreText.setText('Score: ' + score);\n\n  while (score % 50 == 0) {\n    player.setScale(body += 0.1);\n    console.log('big');\n    score += 10;\n  }\n\n  if (stars.countActive(true) === 0) {\n    stars.children.iterate(function (child) {\n      child.enableBody(true, child.x, 0, true, true);\n    });\n    var x = player.x < 400 ? Phaser.Math.Between(400, 800) : Phaser.Math.Between(0, 400);\n    var bomb = bombs.create(x, 16, 'bomb');\n    bomb.setBounce(1);\n    bomb.setCollideWorldBounds(true);\n    bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\n    bomb.allowGravity = false;\n  }\n\n  return;\n}\n\nfunction hitBomb(player, bomb) {\n  this.physics.pause();\n  player.setTint(0xff0000);\n  player.anims.play('turn');\n  gameOver = true;\n}</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"e2b7bbf8450dfbc03a5477adc3aae652","cacheData":{"env":{}}}